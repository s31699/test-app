name: Java CI with Maven

on:
  push:

jobs:
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-output-step.outputs.version-output }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Calculate version
        shell: bash
        run: |
          # …tu wklej swój skrypt z wersjonowaniem…
          echo "0.0.1" > version.txt  # przykładowo

      - id: version-output-step
        name: Set version output
        run: echo "version-output=$(cat version.txt)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: calculate-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 16 & cache Maven
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'temurin'
          cache: maven

      - name: Update pom.xml with new version
        run: |
          sed -i \
            -e "s/<version>local<\/version>/<version>${{ needs.calculate-version.outputs.version }}<\/version>/" \
            pom.xml

      - name: Build with Maven
        run: mvn -B verify

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: target/*.jar
          retention-days: 10

  docker:
    runs-on: ubuntu-latest
    needs: [calculate-version, build]
    if: ${{ github.ref_type == 'branch' && github.ref_name == 'main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: app
          path: target/

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: s31699/test-app:${{ needs.calculate-version.outputs.version }}

  trigger-deploy:
    runs-on: ubuntu-latest
    needs: [calculate-version, docker]
    if: ${{ github.ref_type == 'branch' && github.ref_name == 'main' }}
    steps:
      - name: Invoke Deploy workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy
          repo: s31699/test-deployment
          token: ${{ secrets.CI_TOKEN }}
          inputs: |
            {
              "app": "test-app",
              "version": "${{ needs.calculate-version.outputs.version }}"
            }
